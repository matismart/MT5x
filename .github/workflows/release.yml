name: release

on:
  push:
    tags:
      - 'v*'


jobs:
  build:
    runs-on: ubuntu-latest
    if: github.repository == 'matismart/release'
    steps:
      - name: Check out
        uses: actions/checkout@v2
        with:
          submodules: "recursive"
          fetch-depth: 1

      - name: Checkout private
        uses: actions/checkout@v2
        with:
          repository: matismart/handle
          token: ${{ secrets.MATISMART }}
          path: src

      - name: Install
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-arm-none-eabi cmake

      - name: Build
        working-directory: src
        run: |
          sudo chmod +x ./build.sh
          sudo bash ./build.sh
          zip matismart.zip build/*.bin ../change.txt

      - name: Create Release
        if: success() && startsWith(github.ref, 'refs/tags/')
        id: create_release
        uses: actions/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.MATISMART }}
        with:
          tag_name: ${{ github.ref }}
          release_name: release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release
        id: upload-release-asset
        uses: actions/upload-release-asset@master
        env:
          GITHUB_TOKEN: ${{ secrets.MATISMART }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: src/matismart.zip
          asset_name: matismart.zip
          asset_content_type: application/x-zip
