name: release

on:
  push:
    tags:
      - 'v*'


jobs:
  build:
    runs-on: ubuntu-latest
    if: github.repository == 'matismart/release'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: "recursive"
          fetch-depth: 1

      - name: Checkout ld
        uses: actions/checkout@v2
        with:
          repository: matismart/ldscripts
          token: ${{ secrets.MATISMART }}
          path: ldscripts

      - name: Checkout src
        uses: actions/checkout@v2
        with:
          repository: matismart/handle
          token: ${{ secrets.MATISMART }}
          path: src

      - name: Install
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-arm-none-eabi cmake

      - name: Build
        working-directory: src
        run: |
          sudo chmod +x ./build.sh
          sudo bash ./build.sh
          echo "# matismart firmware release : " >> CHANGELOG.txt
          echo ${{ github.sha }} >> CHANGELOG.txt
          zip firmware.zip build/*.bin CHANGELOG.txt
          zip docs.zip CHANGELOG.txt

      - name: Release
        uses: stopstopstop/release-action@master
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            src/CHANGELOG.txt
            src/docs.zip
            README.md
        env:
          GITHUB_TOKEN: ${{ secrets.MATISMART }}
      # - name: Create Release
      #   if: success() && startsWith(github.ref, 'refs/tags/')
      #   id: create_release
      #   uses: actions/create-release@master
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.MATISMART }}
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: matismart handle release ${{ github.ref }}
      #     draft: false
      #     prerelease: false

      # - name: Upload Release
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@master
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.MATISMART }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: src/docs.zip
      #     asset_name: docs.zip
      #     asset_content_type: application/x-zip

      - name: Send mail
        uses: stopstopstop/mail-action@master
        with:
          server_address:  ${{secrets.MAIL_SERVER}}
          server_port: 465
          username: ${{secrets.MAIL_USERNAME}}
          password: ${{secrets.MAIL_PASSWORD}}
          subject: matismart firmware release
          body: file://README.md
          to: ${{secrets.MAIL_TO}}
          from: Qitas
          cc: ${{secrets.MAIL_CC}}
          bcc: ${{secrets.MAIL_BCC}}
          content_type: text/html
          convert_markdown: true
          attachments: src/firmware.zip,src/docs.zip
